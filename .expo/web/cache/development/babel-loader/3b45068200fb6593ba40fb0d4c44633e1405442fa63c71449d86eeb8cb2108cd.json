{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\meme-generator-main\\\\meme-generator-main\\\\App.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Constants from \"expo-constants\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { captureRef } from \"react-native-view-shot\";\nimport TakePhotoButton from \"./components/TakePhotoButton\";\nimport ChoosePhotoButton from \"./components/ChoosePhotoButton\";\nimport SharePhotoButton from \"./components/SharePhotoButton\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width;\nvar memeTemplateImageUris = [\"https://i.imgflip.com/2/1bij.jpg\", \"https://i.imgflip.com/2/1bgw.jpg\", \"https://i.imgflip.com/2/4t0m5.jpg\", \"https://i.imgflip.com/1og7s3.jpg\", \"https://i.imgur.com/QT8j0d8.png\"];\nexport default function App() {\n  var _this = this;\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    topText = _React$useState2[0],\n    setTopText = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    bottomText = _React$useState4[0],\n    setBottomText = _React$useState4[1];\n  var placeholderMeme = memeTemplateImageUris[0];\n  var _React$useState5 = React.useState(placeholderMeme),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    imgUri = _React$useState6[0],\n    setImgUri = _React$useState6[1];\n  var memeView = React.useRef();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setTopText(text);\n    },\n    value: topText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setBottomText(text);\n    },\n    value: bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    collapsable: false,\n    ref: memeView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imgUri\n    },\n    style: {\n      height: screenWidth,\n      width: screenWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: [styles.memeText, {\n      top: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, topText), React.createElement(Text, {\n    style: [styles.memeText, {\n      bottom: 5\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, bottomText)), React.createElement(TakePhotoButton, {\n    setImgUri: setImgUri,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(ChoosePhotoButton, {\n    setImgUri: setImgUri,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, memeTemplateImageUris.map(function (uri) {\n    return React.createElement(TouchableOpacity, {\n      key: uri,\n      onPress: function onPress() {\n        setImgUri(uri);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: uri\n      },\n      style: styles.templateImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(SharePhotoButton, {\n    memeView: memeView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  memeText: {\n    color: \"white\",\n    fontSize: 38,\n    fontWeight: \"900\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    left: 5,\n    right: 5,\n    backgroundColor: \"transparent\",\n    textShadowColor: \"black\",\n    textShadowRadius: 5,\n    textShadowOffset: {\n      height: 2,\n      width: 2\n    }\n  },\n  textInput: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    width: screenWidth\n  },\n  templateImage: {\n    height: 60,\n    width: 60,\n    marginHorizontal: 0,\n    marginVertical: 0\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\"\n  }\n});","map":{"version":3,"names":["React","Text","View","Dimensions","StyleSheet","TouchableOpacity","TextInput","Image","Button","Share","Constants","ImagePicker","captureRef","TakePhotoButton","ChoosePhotoButton","SharePhotoButton","_Dimensions$get","get","screenWidth","width","memeTemplateImageUris","App","_this","_React$useState","useState","_React$useState2","_slicedToArray","topText","setTopText","_React$useState3","_React$useState4","bottomText","setBottomText","placeholderMeme","_React$useState5","_React$useState6","imgUri","setImgUri","memeView","useRef","createElement","style","styles","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textInput","onChangeText","text","value","collapsable","ref","source","uri","height","memeText","top","bottom","flexDirection","map","key","onPress","templateImage","create","color","fontSize","fontWeight","textAlign","position","left","right","backgroundColor","textShadowColor","textShadowRadius","textShadowOffset","borderWidth","borderColor","marginHorizontal","marginVertical","flex","alignItems","justifyContent","paddingTop","statusBarHeight"],"sources":["C:/Users/Lenovo/Downloads/meme-generator-main/meme-generator-main/App.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  View,\n  Dimensions,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Image,\n  Button,\n  Share,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport * as ImagePicker from \"expo-image-picker\";\n\n// Converts a React View to a png\nimport { captureRef } from \"react-native-view-shot\";\n\nimport TakePhotoButton from \"./components/TakePhotoButton\";\nimport ChoosePhotoButton from \"./components/ChoosePhotoButton\";\nimport SharePhotoButton from \"./components/SharePhotoButton\";\n\nconst { width: screenWidth } = Dimensions.get(\"window\");\n\nconst memeTemplateImageUris = [\n  \"https://i.imgflip.com/2/1bij.jpg\",\n  \"https://i.imgflip.com/2/1bgw.jpg\",\n  \"https://i.imgflip.com/2/4t0m5.jpg\",\n  \"https://i.imgflip.com/1og7s3.jpg\",\n  \"https://i.imgur.com/QT8j0d8.png\",\n];\n\nexport default function App() {\n  const [topText, setTopText] = React.useState(\"\");\n  const [bottomText, setBottomText] = React.useState(\"\");\n\n  const placeholderMeme = memeTemplateImageUris[0];\n  const [imgUri, setImgUri] = React.useState(placeholderMeme);\n  const memeView = React.useRef();\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.textInput}\n        onChangeText={(text) => setTopText(text)}\n        value={topText}\n      />\n      <TextInput\n        style={styles.textInput}\n        onChangeText={(text) => setBottomText(text)}\n        value={bottomText}\n      />\n      <View collapsable={false} ref={memeView}>\n        <Image\n          source={{ uri: imgUri }}\n          style={{ height: screenWidth, width: screenWidth }}\n        />\n        <Text style={[styles.memeText, { top: 5 }]}>{topText}</Text>\n        <Text style={[styles.memeText, { bottom: 5 }]}>{bottomText}</Text>\n      </View>\n      <TakePhotoButton setImgUri={setImgUri} />\n      <ChoosePhotoButton setImgUri={setImgUri} />\n      <View style={{ flexDirection: \"row\" }}>\n        {memeTemplateImageUris.map((uri) => {\n          return (\n            <TouchableOpacity\n              key={uri}\n              onPress={() => {\n                setImgUri(uri);\n              }}\n            >\n              <Image source={{ uri }} style={styles.templateImage} />\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n      <SharePhotoButton memeView={memeView} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  memeText: {\n    color: \"white\",\n    fontSize: 38,\n    fontWeight: \"900\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    left: 5,\n    right: 5,\n    backgroundColor: \"transparent\",\n    textShadowColor: \"black\",\n    textShadowRadius: 5,\n    textShadowOffset: { height: 2, width: 2 },\n  },\n  textInput: {\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    width: screenWidth,\n  },\n  templateImage: {\n    height: 60,\n    width: 60,\n    marginHorizontal: 0,\n    marginVertical: 0,\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}